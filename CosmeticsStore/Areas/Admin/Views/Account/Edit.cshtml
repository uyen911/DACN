@model CosmeticsStore.Models.ApplicationUser
@using Microsoft.AspNet.Identity
@using CosmeticsStore.Models
@using System.Security.Claims;
@using Microsoft.AspNet.Identity.EntityFramework;


@{
    ViewBag.Title = "Profile";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}




@section naviheader
{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link"><font color="white">Trang chủ</font></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/account" class="nav-link"><font color="white">Danh sách tài khoản</font></a>
        </li>
    </ul>
}

<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3">

                <!-- Profile Image -->
                <div class="card card-primary card-outline">
                    <div class="card-body box-profile">
                        <div class="text-center">
                            <img class="profile-user-img img-fluid img-circle"
                                 src="@Html.DisplayFor(model => model.Images)" id="pictureUpload"
                                 alt="User profile picture">
                        </div>

                        <h3 class="profile-username text-center">@Html.DisplayFor(model => model.UserName)</h3>

                        <p class="text-muted text-center">@Html.DisplayFor(model => model.FullName)</p>

                        <ul class="list-group list-group-unbordered mb-3">
                            <li class="list-group-item">
                                <b>Năm sinh:</b> <a class="float-right">@Html.DisplayFor(model => model.DateOfBirth)</a>
                            </li>
                            <li class="list-group-item">
                                <b>Giới tính</b> <a class="float-right">@Html.DisplayFor(model => model.Sex)</a>
                            </li>

                            <li class="list-group-item">
                                <b>Phone:</b> <a class="float-right">@Html.DisplayFor(model => model.Phone)</a>
                            </li>
                            <li class="list-group-item">
                                <b>Email:</b> <a class="float-right">@Html.DisplayFor(model => model.Email)</a>
                            </li>
                            <li class="list-group-item">
                                <b>Chức vụ:</b> <a class="float-right">@string.Join(",", ViewBag.Roles)</a> <!--Fix this one how to display Role's Name'---> <!---Don't use usermanager or await'-->
                            </li>

                            <li class="list-group-item">
                                <b>Khoá tài khoản:</b> <a class="float-right">@Html.DisplayFor(model => model.LockoutEnabled)</a>
                            </li>

                        </ul>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
                <!-- About Me Box -->
                <!-- /.card -->
            </div>
            <!-- /.col -->
            <div class="col-md-9">
                <div class="card">
                    <div class="card-header p-2">
                        <h1 class="btn btn-lg btn-primary">HỒ SƠ</h1>
                        <!--<ul class="nav nav-pills">
                        <li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">Settings</a></li>
                                        </ul>-->
                    </div> <!--/.card-header -->
                    <div class="card-body">
                        @using (Html.BeginForm("Edit", "Account", FormMethod.Post))
                        {
                            @Html.ValidationSummary(false)
                            @Html.AntiForgeryToken()
                            <form class="form-horizontal" action="@Url.Action("Edit", "Account", new { account = Model as ApplicationUser})">
                                <div class="form-group row">
                                    <label for="inputName" class="col-sm-2 col-form-label">Tên tài khoản</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @placeholder = "Tên tài khoản" })
                                        @Html.ValidationMessageFor(x => x.UserName, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="inputName" class="col-sm-2 col-form-label">Họ và Tên</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", @placeholder = "Họ tên" })
                                        @Html.ValidationMessageFor(x => x.FullName, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="inputBirth" class="col-sm-2 col-form-label">Năm sinh</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control", @placeholder = "Năm sinh" })
                                        @Html.ValidationMessageFor(x => x.DateOfBirth, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="inputSex" class="col-sm-2 col-form-label">Giới tính</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(model => model.Sex, new { @class = "form-control", @placeholder = "Giới tính" })
                                        @Html.ValidationMessageFor(x => x.Sex, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="inputSex" class="col-sm-2 col-form-label">Chức vụ</label>
                                    <div class="col-sm-10">
                                        @Html.DropDownList("Role", ViewBag.Role as SelectList, "-- Chọn quyền --", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(x => x.Roles, null, new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="inputSex" class="col-sm-2 col-form-label">Kích hoạt</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(model => model.LockoutEnabled, new { @class = "form-control", @placeholder = "Kích hoạt" })
                                        @Html.ValidationMessageFor(x => x.LockoutEnabled, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="inputPhone" class="col-sm-2 col-form-label">Số điện thoại</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @placeholder = "Số điện thoại" })
                                        @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="inputEmail" class="col-sm-2 col-form-label">Email</label>
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email" })
                                        @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label for="inputEmail" class="col-sm-2 col-form-label">Ảnh đại diện</label>
                                    <div class="input-group col-sm-8 col-form-label">
                                        <div class="custom-file">
                                            @Html.EditorFor(model => model.Images, "Ảnh đại diện", new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-2">
                                            <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                                                   style="display:none;" />
                                            <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />

                                        </div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="offset-sm-2 col-sm-10">
                                        <div class="checkbox">
                                            <label>
                                                <input type="checkbox"> I agree to the <a href="#">terms and conditions</a>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="offset-sm-2 col-sm-10">
                                        <button type="submit" class="btn btn-danger">Lưu</button>
                                    </div>
                                </div>


                            </form>
                        }
                        <!--</div>
                        /.tab-pane -->
                        <!--</div>
                        /.tab-content -->
                    </div><!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</div>


@section upload
{
    <script>
        $(function () {
            $('#btnUpload').click(function () {
                $('#fileUpload').trigger('click');
            });
        });
        $('#fileUpload').change(function () {
            if (window.FormData !== undefined) {
                var fileUpload = $('#fileUpload').get(0);
                var files = fileUpload.files;
                var formData = new FormData();
                formData.append('file', files[0]);
                $.ajax(
                    {
                        type: 'POST',
                        url: '/Account/ProcessUpload',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (urlImage) {
                            $('#pictureUpload').attr('src', urlImage);
                            $('#Images').val(urlImage);
                        },
                        error: function (err) {
                            swal({
                                title: 'Thông báo',
                                text: 'Error ' + err.statusText,
                                icon: 'success',
                                button: 'Đóng'
                            });
                        }
                    });
            }
        });
    </script>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
